{"version":3,"sources":["app/coup.js","app/CoupCard.jsx","app/generate-coup-roles.js","app/generate-seed.js","app/CoupG54Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["enhanceRole","role","category","getCategory","categoryId","enhanceCategory","findOrThrow","type","array","predicate","message","item","find","Error","data","categories","id","rolesInCategoryById","roles","filter","map","useStyles","makeStyles","theme","card","communications","backgroundColor","colors","blue","finance","green","force","purple","pink","CoupCard","props","name","classes","cardClassName","avatarClassName","Card","className","CardHeader","avatar","Avatar","abbreviation","title","subheader","CardContent","text","generateCoupRoles","seed","Math","random","twister","MersenneTwister","rng","pickedCards","forEach","concat","shuffleArray","pick","picks","count","pickCards","bind","generateSeed","sha1","slice","seedFromHash","string","parseInt","CoupG54Game","window","location","hash","console","log","e","state","cards","hashSeed","this","setState","Button","variant","color","size","onClick","newGame","startIcon","key","React","Component","App","Fragment","CssBaseline","Container","maxWidth","Box","my","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3161e459.chunk.js","sourcesContent":["import data from './coup.json'\n\nconst enhanceRole = role => ({\n  ...role,\n  category: getCategory(role.categoryId),\n})\n\n\nconst enhanceCategory = category => ({\n  ...category,\n})\n\nfunction findOrThrow (type, array, predicate, message) {\n  const item = array.find(predicate)\n\n  if (!item) {\n    throw new Error(`Invalid ${type}`)\n  }\n\n  return item\n}\n\nconst getCategory = categoryId => enhanceCategory(findOrThrow('Category', data.categories, category => category.id === categoryId))\nconst getCategoryByName = categoryName => enhanceCategory(findOrThrow('Category', data.categories, category => category.name === categoryName))\n\nconst getRole = name => enhanceRole(findOrThrow('Role', data.roles, role => role.name === name))\nconst rolesInCategoryById = categoryId => data.roles.filter(role => role.categoryId === categoryId).map(enhanceRole)\nconst rolesInCategory = categoryName => rolesInCategoryById(getCategoryByName(categoryName).id).map(role => role.name)\n\nconst allCategories = () => data.categories\n\nexport {\n  getRole,\n  rolesInCategory,\n  rolesInCategoryById,\n  allCategories,\n}\n","import React from 'react'\nimport { getRole } from './coup'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Card, CardHeader, CardContent, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    \"margin-top\": '5px',\n  },\n  communications: {\n    backgroundColor: colors.blue[500],\n  },\n  finance: {\n    backgroundColor: colors.green[500],\n  },\n  force: {\n    backgroundColor: colors.purple[500],\n  },\n  \"special-interests\": {\n    backgroundColor: colors.pink[500],\n  },\n}))\n\nfunction CoupCard (props) {\n  const role = getRole(props.role)\n  const classes = useStyles()\n  const cardClassName = classes.card\n  const avatarClassName = classes[role.category.id]\n\n  return (\n    <Card className={cardClassName}>\n      <CardHeader\n        avatar={\n          <Avatar className={avatarClassName}>\n            {role.category.abbreviation}\n          </Avatar>\n        }\n        title={role.name}\n        subheader={role.category.name}\n      />\n      <CardContent>\n        {role.text}\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default CoupCard\n","import { rolesInCategoryById, allCategories } from './coup'\nimport shuffleArray from 'shuffle-array'\nimport MersenneTwister from 'mersenne-twister'\n\nfunction pickCards(rng, categories) {\n  let pickedCards = []\n\n  categories.forEach(category => {\n    const roles = rolesInCategoryById(category.id)\n    pickedCards = pickedCards.concat(shuffleArray.pick(roles, {picks: category.count, rng: rng}))\n  })\n\n  return pickedCards.map(role => role.name)\n}\n\nfunction generateCoupRoles (seed) {\n  if (!seed) {\n    seed = Math.random()\n  }\n\n  let twister = new MersenneTwister(seed),\n      rng = twister.random.bind(twister)\n\n  return pickCards(rng, allCategories())\n}\n\nexport default generateCoupRoles\n","import sha1 from 'sha1'\n\nfunction generateSeed() {\n  return sha1(Math.random()).slice(0, 8)\n}\n\nexport default generateSeed\n","import React from 'react'\nimport CoupCard from './CoupCard'\nimport { Button } from '@material-ui/core'\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nimport generateCoupRoles from './generate-coup-roles'\n\nimport generateSeed from './generate-seed'\nimport sha1 from 'sha1'\n\nfunction seedFromHash(string) {\n  return parseInt(sha1(string).slice(0, 8), 16)\n}\n\nclass CoupG54Game extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let seed = 0;\n    try {\n      let hashSeed = window.location.hash.slice(1)\n      seed = seedFromHash(hashSeed)\n      console.log(\"resuming game\", seed)\n    } catch (e) {\n      console.log(\"new game!\")\n      seed = parseInt(sha1(\"deadbeef\"), 16)\n    }\n    this.state = {cards: generateCoupRoles(seed)}\n  }\n\n  newGame() {\n    let hashSeed = generateSeed()\n    window.location.hash = hashSeed\n    let seed = seedFromHash(hashSeed)\n    console.log(\"playing game\", seed)\n    this.setState({cards: generateCoupRoles(seed)})\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={this.newGame.bind(this)}\n          startIcon={<ShuffleIcon />}\n        >\n          New Game\n        </Button>\n        {this.state.cards.map((role, key) => <CoupCard key={key} role={role}/>)}\n      </div>\n    )\n  }\n}\n\nexport default CoupG54Game\n","import React from 'react'\nimport { CssBaseline, Container, Box } from '@material-ui/core'\n\nimport CoupG4Game from './app/CoupG54Game'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <CoupG4Game />\n        </Box>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
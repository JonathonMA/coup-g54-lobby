{"version":3,"sources":["app/coup.js","app/generate-coup-roles.js","app/CoupCard.js","app/CoupG54Game.js","app/generate-seed.js","app/NewGame.js","App.js","reportWebVitals.js","index.js"],"names":["enhanceRole","role","category","getCategory","categoryId","enhanceCategory","findOrThrow","type","array","predicate","message","item","find","Error","data","categories","id","rolesInCategoryById","roles","filter","map","generateCoupRoles","seed","chance","Chance","rng","pickedCards","forEach","concat","shuffleArray","pick","picks","count","name","pickCards","random","bind","roleColors","communications","colors","blue","finance","green","force","purple","pink","useStyles","makeStyles","theme","func","color","backgroundColor","mapObject","CoupCard","roleName","classes","Card","className","CardHeader","avatar","Avatar","abbreviation","title","subheader","CardContent","action","text","block","special","CoupG54Game","useParams","gameSeed","key","generateSeed","hash","length","NewGame","to","BottomNavBar","shortLocation","useLocation","pathname","split","BottomNavigation","value","showLabels","BottomNavigationAction","label","icon","component","Link","path","Fab","aria-label","GameTitle","About","Typography","variant","App","CssBaseline","Container","maxWidth","Box","my","AppBar","position","Toolbar","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f49d4f6.chunk.js","sourcesContent":["import data from \"./coup.json\"\n\nconst enhanceRole = (role) => ({\n  ...role,\n  category: getCategory(role.categoryId),\n})\n\nconst enhanceCategory = (category) => ({\n  ...category,\n})\n\nfunction findOrThrow(type, array, predicate, message) {\n  const item = array.find(predicate)\n\n  if (!item) {\n    throw new Error(`Invalid ${type}`)\n  }\n\n  return item\n}\n\nconst getCategory = (categoryId) =>\n  enhanceCategory(\n    findOrThrow(\n      \"Category\",\n      data.categories,\n      (category) => category.id === categoryId\n    )\n  )\nconst getCategoryByName = (categoryName) =>\n  enhanceCategory(\n    findOrThrow(\n      \"Category\",\n      data.categories,\n      (category) => category.name === categoryName\n    )\n  )\n\nconst getRole = (name) =>\n  enhanceRole(findOrThrow(\"Role\", data.roles, (role) => role.name === name))\nconst rolesInCategoryById = (categoryId) =>\n  data.roles.filter((role) => role.categoryId === categoryId).map(enhanceRole)\nconst rolesInCategory = (categoryName) =>\n  rolesInCategoryById(getCategoryByName(categoryName).id).map(\n    (role) => role.name\n  )\n\nconst allCategories = () => data.categories\n\nexport { getRole, rolesInCategory, rolesInCategoryById, allCategories }\n","import { rolesInCategoryById, allCategories } from \"./coup\"\nimport shuffleArray from \"shuffle-array\"\nimport Chance from \"chance\"\n\nfunction pickCards(rng, categories) {\n  let pickedCards = []\n\n  categories.forEach((category) => {\n    const roles = rolesInCategoryById(category.id)\n    pickedCards = pickedCards.concat(\n      shuffleArray.pick(roles, { picks: category.count, rng: rng })\n    )\n  })\n\n  return pickedCards.map((role) => role.name)\n}\n\nexport default function generateCoupRoles(seed) {\n  if (!seed) {\n    throw new Error(\"missing seed\")\n  }\n\n  let chance = new Chance(seed),\n    rng = chance.random.bind(chance)\n\n  return pickCards(rng, allCategories())\n}\n","import React from \"react\"\nimport { getRole } from \"./coup\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  CardContent,\n  colors,\n} from \"@material-ui/core\"\nimport mapObject from \"underscore/modules/mapObject\"\n\nconst roleColors = {\n  communications: colors.blue[500],\n  finance: colors.green[500],\n  force: colors.purple[500],\n  \"special-interests\": colors.pink[500],\n}\n\nconst allRoles = (func) => mapObject(roleColors, func)\n\nconst useStyles = makeStyles((theme) =>\n  allRoles((color) => ({\n    \"margin-top\": \"5px\",\n    \"& div.MuiAvatar-colorDefault\": {\n      backgroundColor: color,\n    },\n    \"& .roleFg\": {\n      color: color,\n    },\n  }))\n)\nfunction CoupCard({ roleName }) {\n  const role = getRole(roleName)\n  const classes = useStyles()\n\n  return (\n    <Card className={classes[role.category.id]}>\n      <CardHeader\n        avatar={<Avatar>{role.category.abbreviation}</Avatar>}\n        title={<div className=\"roleFg\">{role.name}</div>}\n        subheader={role.category.name}\n      />\n      <CardContent>\n        <p>\n          <b>{role.action}</b>: {role.text}\n        </p>\n        {role.block && (\n          <p className=\"roleFg\">\n            Blocks {role.action}\n            {role.special && <> ({role.special})</>}\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default CoupCard\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nimport generateCoupRoles from \"./generate-coup-roles\"\nimport CoupCard from \"./CoupCard\"\n\nexport default function CoupG54Game() {\n  const { gameSeed } = useParams()\n  const roleNames = generateCoupRoles(gameSeed)\n\n  return roleNames.map((roleName, key) => <CoupCard {...{ roleName, key }} />)\n}\n","import Chance from \"chance\"\n\nfunction generateSeed() {\n  // by default G54 has 5400 possible role configurations, so we should pick a hash size that could reasonable contain all these states\n  // (5C1 communications * 5C1 finance * 6C1 force * 9C2 special interests)\n  // if we wanted to be real clever we could calculate an appropriate hash size on the fly based on the roles database\n  return new Chance().hash({ length: 4 })\n}\n\nexport default generateSeed\n","import { Redirect } from \"react-router-dom\"\nimport generateSeed from \"./generate-seed\"\n\nexport default function NewGame() {\n  const seed = generateSeed()\n\n  return <Redirect to={`/game/${seed}`} />\n}\n","import React from \"react\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useParams,\n} from \"react-router-dom\"\n\nimport {\n  CssBaseline,\n  Container,\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  AppBar,\n  Toolbar,\n  Typography,\n  Card,\n  CardContent,\n  Fab,\n} from \"@material-ui/core\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\"\n\nimport CoupG54Game from \"./app/CoupG54Game\"\nimport NewGame from \"./app/NewGame\"\n\nfunction BottomNavBar() {\n  const location = useLocation()\n  const shortLocation = location.pathname.split(\"/\")[1]\n\n  return (\n    <BottomNavigation value={shortLocation} showLabels>\n      <BottomNavigationAction\n        value=\"game\"\n        label=\"Game\"\n        icon={<PlayArrowIcon />}\n        component={Link}\n        to=\"/game\"\n      />\n      <BottomNavigationAction\n        value=\"about\"\n        label=\"About\"\n        icon={<InfoIcon />}\n        component={Link}\n        to=\"/about\"\n      />\n      <Switch>\n        <Route path=\"/game\">\n          <Fab color=\"primary\" aria-label=\"new\" component={Link} to=\"/game\">\n            <ShuffleIcon />\n          </Fab>\n        </Route>\n      </Switch>\n    </BottomNavigation>\n  )\n}\n\nfunction GameTitle() {\n  const { gameSeed } = useParams()\n  return (\n    <>\n      Coup: Rebellion G54 <i>(game {gameSeed})</i>\n    </>\n  )\n}\n\nfunction About() {\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          Coup: Rebellion G54 Lobby\n        </Typography>\n        <Typography variant=\"body1\">\n          This helps automate the pregame ritual of playing Coup: Rebellion G54.\n          Generate a game, and share the link with your friends.\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          Author\n        </Typography>\n        <Typography variant=\"body1\">Jonathon M. Abbott</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\">\n                <Switch>\n                  <Route path=\"/game/:gameSeed\">\n                    <GameTitle />\n                  </Route>\n                  <Route path=\"/about\">About</Route>\n                </Switch>\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/game\" />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/game\">\n              <NewGame />\n            </Route>\n            <Route path=\"/game/:gameSeed\">\n              <CoupG54Game />\n            </Route>\n            <Route path=\"/*\">\n              <NewGame />\n            </Route>\n          </Switch>\n        </Box>\n      </Container>\n      <BottomNavBar />\n    </Router>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}